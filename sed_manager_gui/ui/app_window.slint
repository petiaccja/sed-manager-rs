import { DeviceDescription, ExampleData as DeviceDescriptionExampleData } from "data/device_description.slint";
import { UnavailableDevice } from "data/unavailable_device.slint";
import { ActionResult } from "data/action_result.slint";
import { UnavailableDevicesPage} from "pages/unavailable_devices_page.slint";
import { ContentStatus } from "data/content_Status.slint";
import { TabBar } from "widgets/tab_bar.slint";
import { SwitchContainer, SwitchContent } from "widgets/switch_content.slint";
import { Button, Spinner } from "std-widgets.slint";
import { DevicePage } from "pages/device_page.slint";

export component AppWindow inherits Window {
    title: "SED Manager";
    icon: @image-url("../images/temporary_logo.png");
    preferred-width: 960px;
    preferred-height: 600px;
    min-width: 640px;
    min-height: 360px;
    in property <[string]> device-tabs;
    in property <[DeviceDescription]> device-descriptions;
    in property <[UnavailableDevice]> unavailable-devices;
    in property <[ActionResult]> action-results;
    private property <int> selected-device-tab;
    callback update-devices();
    callback update-device-discovery(device-idx: int);
    callback take-ownership(device-idx: int, new-password: string);
    callback activate-locking(device-idx: int, sid-password: string, new-admin1-password: string);
    VerticalLayout {
        if device-tabs.length != 0: VerticalLayout {
            alignment: stretch;
            padding-left: 16px;
            padding-right: 16px;
            padding-bottom: 16px;
            padding-top: 6px;
            HorizontalLayout {
                vertical-stretch: 0.0;
                TabBar {
                    titles: root.device-tabs;
                    tab-selected(index) => {
                        root.selected-device-tab = index;
                    }
                }

                Button {
                    height: 32px;
                    icon: @image-url("../images/action/8666728_refresh_cw_icon.svg");
                    colorize-icon: true;
                    clicked => {
                        update-devices();
                    }
                }
            }

            SwitchContainer {
                vertical-stretch: 1.0;
                for description[i] in root.device-descriptions: SwitchContent {
                    selected: i == selected-device-tab;
                    DevicePage {
                        description: description;
                        action-result: i < action-results.length ? action-results[i] : { };
                        update-device-discovery => {
                            update-device-discovery(i);
                        }
                        take-ownership(new-password) => {
                            take-ownership(i, new-password);
                        }
                        activate-locking(sid-password, new-admin1-password) => {
                            activate-locking(i, sid-password, new-admin1-password);
                        }
                    }
                }
                SwitchContent {
                    selected: selected-device-tab >= root.device-descriptions.length;
                    UnavailableDevicesPage {
                        unavailable-devices: root.unavailable-devices;
                    }
                }
            }
        }
        if device-tabs.length == 0: HorizontalLayout {
            alignment: space-around;
            VerticalLayout {
                Rectangle {
                    preferred-height: 100%;
                }

                HorizontalLayout {
                    alignment: space-around;
                    Spinner {
                        width: 80px;
                        height: 80px;
                        indeterminate: true;
                    }
                }

                Text {
                    text: "Loading devices...";
                    font-size: 24px;
                    horizontal-alignment: center;
                }

                Text {
                    text: "This might take 10-20 seconds if drives need to spin up.";
                    horizontal-alignment: center;
                }

                Rectangle {
                    preferred-height: 100%;
                }
            }
        }
    }
}

export component LivePreviewTest_Loading inherits AppWindow { }

export component LivePreviewTest_Success inherits AppWindow {
    device-tabs: ["Foo Device", "Bar Device", "Unavailable drives"];
    device-descriptions: [
        DeviceDescriptionExampleData.description,
        DeviceDescriptionExampleData.description
    ];
}
