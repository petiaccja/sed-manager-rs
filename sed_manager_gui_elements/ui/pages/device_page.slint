import { DeviceDescription } from "../data/device_description.slint";
import { AlternativeChild, AlternativeLayout } from "../widgets/alternative_layout.slint";
import { ExtendedStatus, Status } from "../data/status.slint";
import { Activity } from "../data/activity.slint";
import { LockingRange } from "../data/locking_range.slint";

import { Description } from "../info/description.slint";
import { TakeOwnership } from "../configure/take_owneship.slint";
import { ActivateLocking } from "../configure/activate_locking.slint";
import { RangeEditor} from "../configure/range_editor.slint";
import { UserEditor } from "../configure/user_editor.slint";
import { Revert } from "../configure/revert.slint";
import { DeviceListState, TroubleshootingState } from "../state.slint";
import { StackResetPopup } from "../troubleshoot/stack-reset.slint";

export component DevicePage {
    in property <int> device-idx: 0;
    private property <Activity> current-activity: Activity.description;
    function set-current-activity(activity: Activity) {
        DeviceListState.release-session(device-idx);
        self.current-activity = activity;
        if activity == Activity.description {
            DeviceListState.discover(device-idx);
        } else if activity == Activity.stack-reset {
            TroubleshootingState.stack-reset(device-idx);
            self.current-activity = Activity.description;
            stack-reset.show();
        }
    }
    public function gained-focus() {
        if current-activity == Activity.description && DeviceListState.descriptions[device-idx].discovery-status.status == Status.loading {
            DeviceListState.discover(device-idx);
        }
    }
    VerticalLayout {
        if current-activity == Activity.description: Description {
            description: DeviceListState.descriptions[device-idx];
            select-activity(activity) => {
                set-current-activity(activity);
            }
        }
        if current-activity == Activity.take-ownership: TakeOwnership {
            device-idx: device-idx;
            back => {
                set-current-activity(Activity.description);
            }
        }
        if current-activity == Activity.activate-locking: ActivateLocking {
            device-idx: device-idx;
            back => {
                set-current-activity(Activity.description);
            }
        }
        if current-activity == Activity.range-editor: RangeEditor {
            device-idx: device-idx;
            back => {
                set-current-activity(Activity.description);
            }
        }
        if current-activity == Activity.user-editor: UserEditor {
            device-idx: device-idx;
            back => {
                set-current-activity(Activity.description);
            }
        }
        if current-activity == Activity.revert: Revert {
            device-idx: device-idx;
            back => {
                set-current-activity(Activity.description);
            }
        }
    }

    stack-reset := StackResetPopup {
        extended-status: TroubleshootingState.statuses[device-idx];
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        finished => {
            self.close();
        }
    }
}
