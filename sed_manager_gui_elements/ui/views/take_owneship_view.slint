import { OneClickConfigView } from "one_click_config_view.slint";
import { LineEdit, Button } from "std-widgets.slint";
import { PaletteExtra } from "../widgets/visual.slint";
import { PasswordValidator } from "../widgets/password_validator.slint";
import { ContentStatus} from "../data/content_status.slint";
import { SolidPopupWindow } from "../widgets/solid_popup_window.slint";

component ConfirmationPopup inherits SolidPopupWindow {
    width: 400px;
    height: self.min-height;
    callback confirmed();
    content := VerticalLayout {
        spacing: 12px;
        padding: 12px;
        HorizontalLayout {
            alignment: center;
            spacing: 6px;
            VerticalLayout {
                alignment: center;
                Image {
                    source: @image-url("../../images/error/8666599_alert_triangle_icon.svg");
                    colorize: PaletteExtra.warning-foreground;
                    width: 80px;
                    height: 80px;
                }
            }

            VerticalLayout {
                spacing: 8px;
                alignment: center;
                Text {
                    text: "Losing the password could render your drive unusable (bricked)!";
                    font-weight: 600;
                    wrap: word-wrap;
                }

                Text {
                    text: "You need this password to reset the device in case you lose your encryption password.";
                    wrap: word-wrap;
                }

                Text {
                    text: "Make sure you have your PSID password. The PSID is a second way to reset the drive.";
                    wrap: word-wrap;
                }
            }
        }

        HorizontalLayout {
            alignment: end;
            spacing: 6px;
            Button {
                text: "Continue";
                width: 90px;
                clicked => {
                    root.close();
                    root.confirmed();
                }
            }

            Button {
                text: "Cancel";
                width: 90px;
                clicked => {
                    root.close();
                }
            }
        }
    }
}

export component TakeOwnershipView inherits OneClickConfigView {
    config-name: "Take ownership";
    config-icon: @image-url("../../images/action/8666628_user_check_icon.svg");
    callback take-ownership(new-password: string);
    private property <string> feedback-text;
    private property <bool> password-ok: feedback-text == "";
    confirmation-popup := ConfirmationPopup {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        confirmed => {
            root.start();
            take-ownership(password.text)
        }
    }

    VerticalLayout {
        alignment: LayoutAlignment.center;
        padding: 8px;
        spacing: 6px;
        min-width: 200px;
        Text {
            text: "New owner password:";
        }

        password := LineEdit {
            input-type: InputType.password;
            edited(text) => {
                validate-password()
            }
        }

        Text {
            text: "Repeat password:";
        }

        repeat := LineEdit {
            input-type: InputType.password;
            edited(text) => {
                validate-password()
            }
        }

        Button {
            text: "Take ownership";
            primary: true;
            enabled: password-ok && root.result.status != ContentStatus.loading;
            clicked => {
                confirmation-popup.show();
            }
        }

        Text {
            text: feedback-text;
            color: PaletteExtra.error-foreground;
            horizontal-alignment: center;
        }
    }

    function validate-password() {
        feedback-text = PasswordValidator.validate(password.text, repeat.text)
    }
}
