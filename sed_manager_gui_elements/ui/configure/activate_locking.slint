import { LineEdit, Button, Switch } from "std-widgets.slint";
import { PaletteExtra } from "../widgets/visual.slint";
import { Status, ExtendedStatus} from "../data/status.slint";
import { ResultPopup } from "../widgets/result_popup.slint";
import { ConfigView } from "config_view.slint";
import { RepeatedPasswordEdit } from "../widgets/password.slint";
import { Icons } from "../icons.slint";
import { SingleStepState } from "../state.slint";

component Form {
    out property <string> sid-password;
    out property <string> admin1-password: {
        if use-owner.checked {
            sid-password
        } else {
            admin1-password.password
        }
    }
    in property <bool> enabled;
    callback executed();
    VerticalLayout {
        alignment: LayoutAlignment.center;
        padding: 8px;
        spacing: 6px;
        min-width: 200px;
        Text {
            text: "Enter owner password:";
        }

        owner-password := LineEdit {
            input-type: InputType.password;
            text <=> sid-password;
        }

        Rectangle {
            height: 12px;
        }

        admin1-password := RepeatedPasswordEdit {
            enabled: !use-owner.checked;
            prompt-text: "New Admin1 password:";
        }

        use-owner := Switch {
            text: "Use owner password";
        }

        Rectangle {
            height: 12px;
        }

        Button {
            text: "Activate locking";
            primary: true;
            enabled: (use-owner.checked || admin1-password.accepted) && enabled;
            clicked => {
                executed();
            }
        }

        Text {
            text: use-owner.checked ? "" : admin1-password.reason;
            color: PaletteExtra.error-foreground;
            horizontal-alignment: center;
        }
    }
}

export component ActivateLocking inherits ConfigView {
    in property <ExtendedStatus> extended-status: SingleStepState.statuses[root.device-idx];
    config-name: "Activate locking";
    config-icon: Icons.activate-locking;
    back-enabled: extended-status.status != Status.loading;
    result-popup := ResultPopup {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        icon: root.config-icon;
        finish-enabled: root.back-enabled;
        retry-enabled: root.back-enabled;
        status: extended-status.status;
        finish-text: "Done";
        message: {
            if extended-status.status == Status.success {
                "Locking is now active!\nNote: you still have to set up locking ranges."
            } else if extended-status.status == Status.error {
                "Failed to activate locking:\n" + extended-status.message
            } else {
                "Activating locking..."
            }
        }
        finished => {
            self.close();
            root.back();
        }
        retried => {
            self.close();
        }
    }

    HorizontalLayout {
        alignment: center;
        vertical-stretch: 1.0;
        form := Form {
            enabled: root.back-enabled;
            executed => {
                SingleStepState.activate-locking(root.device-idx, self.sid-password, self.admin1-password);
                result-popup.show();
            }
        }
    }
}
