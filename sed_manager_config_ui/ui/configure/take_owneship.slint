import { LineEdit, Button } from "std-widgets.slint";
import { PaletteExtra } from "../widgets/visual.slint";
import { RepeatedPasswordEdit } from "../widgets/password.slint";
import { Status, ExtendedStatus} from "../data/status.slint";
import { WarningPopup } from "../widgets/warning_popup.slint";
import { ResultPopup } from "../widgets/result_popup.slint";
import { ConfigView } from "config_view.slint";
import { Icons } from "../icons.slint";
import { SingleStepState } from "../state.slint";

component WarningMessage {
    VerticalLayout {
        spacing: 8px;
        alignment: center;
        Text {
            text: "Losing your password could render your drive unusable!";
            font-weight: 600;
            wrap: word-wrap;
        }

        Text {
            text: "In case you lose your encryption password, the only way to regain control of the drive is via factory reset. You will need either this password or the PSID password for that.";
            wrap: word-wrap;
        }
    }
}

component Form {
    in property <bool> enabled: true;
    out property <string> password <=> password.password;
    callback executed();
    VerticalLayout {
        alignment: LayoutAlignment.center;
        padding: 8px;
        spacing: 6px;
        min-width: 200px;
        password := RepeatedPasswordEdit {
            prompt-text: "New owner password:";
        }

        Button {
            text: "Take ownership";
            primary: true;
            enabled: password.accepted && enabled;
            clicked => {
                executed()
            }
        }

        Text {
            text: password.reason;
            color: PaletteExtra.error-foreground;
            horizontal-alignment: center;
        }
    }
}

export component TakeOwnership inherits ConfigView {
    in property <ExtendedStatus> extended-status: SingleStepState.statuses[root.device-idx];
    config-name: "Take ownership";
    config-icon: Icons.take-ownership;
    back-enabled: extended-status.status != Status.loading;
    warning-popup := WarningPopup {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        WarningMessage { }

        continued => {
            self.close();
            SingleStepState.take-ownership(root.device-idx, form.password);
            result-popup.show();
        }
        cancelled => {
            self.close();
        }
    }

    result-popup := ResultPopup {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        icon: root.config-icon;
        finish-enabled: root.back-enabled;
        retry-enabled: root.back-enabled;
        status: extended-status.status;
        finish-text: "Done";
        message: {
            if extended-status.status == Status.success {
                "You now own this drive"
            } else if extended-status.status == Status.error {
                "Failed to take ownership:\n" + extended-status.message
            } else {
                "Taking ownership..."
            }
        }
        finished => {
            self.close();
            root.back();
        }
        retried => {
            self.close();
        }
    }

    HorizontalLayout {
        alignment: center;
        vertical-stretch: 1.0;
        form := Form {
            enabled: root.back-enabled;
            executed => {
                warning-popup.show();
            }
        }
    }
}
